#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Telegram-–±–æ—Ç –¥–ª—è –∫–≤–µ—Å—Ç–∞ –Ω–∞ –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è.
–°–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ python-telegram-bot.
"""

import logging
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ConversationHandler,
    MessageHandler,
    filters,
    ContextTypes,
)
from telegram.constants import ParseMode

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = "8285756176:AAEQNxrmwdRgz9X7YU0q0PVxgJNdnsdN4Cc"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
(
    START_QUEST,
    AWAIT_TASK_1,
    AWAIT_TASK_2,
    AWAIT_TASK_3,
    AWAIT_TASK_4,
    AWAIT_TASK_5,
    AWAIT_FINAL_CONFIRM,
    QUEST_FINISHED,
) = range(8)

# –°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –æ—à–∏–±–∫–µ
WRONG_ANSWERS = [
    "<b>–ü—Ä–æ–≤–∞–ª –ë—Ä–æ—Å–∫–∞!</b> –≠—Ç–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å! –¢–≤–æ—è –∏–Ω—Ç—É–∏—Ü–∏—è —Ç–µ–±—è –ø–æ–¥–≤–æ–¥–∏—Ç. üòµ‚Äçüí´",
    "<b>–ù–µ-–µ-–µ—Ç! –ò–ª–ª—é–∑–∏—è –¥–µ—Ä–∂–∏—Ç—Å—è!</b> –ü–æ–≤—Ç–æ—Ä–∏ —Å–≤–æ–π –ø–æ–∏—Å–∫, –ì–µ—Ä–æ–π. üïµÔ∏è‚Äç‚ôÇÔ∏è",
    "<b>–ù–µ —Ç–æ!</b> –¢–≤–æ–π —Å–≤–∏—Ç–æ–∫ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –æ–∫–∞–∑–∞–ª—Å—è –ø—É—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é —Ñ–æ—Ä–º—É–ª—É. üìú",
    "<b>–°–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ.</b> –≠—Ç–æ –ª–∏—à—å –æ–±–º–∞–Ω–∫–∞! –ú–∞–≥–∏—è —Å–ª–æ–∂–Ω–µ–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è. üåÄ",
    "<b>–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö!</b> –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–≤–ø–∞–ª —Å —Ñ–æ—Ä–º—É–ª–æ–π. –ü–æ–≤—Ç–æ—Ä–∏ –∞–Ω–∞–ª–∏–∑, –±—ã—Å—Ç—Ä–æ! üß†",
]


async def wrong_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ."""
    await update.message.reply_text(
        random.choice(WRONG_ANSWERS), parse_mode=ParseMode.HTML
    )


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 1: /start. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, GIF-1 –∏ –∫–Ω–æ–ø–∫—É."""
    keyboard = [
        [InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç", callback_data="start_quest")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    text = (
        "–û—Ö, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –ê–Ω–¥—Ä–µ–π, –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å –¢—Ä–µ—Ö —Å –ü–æ–ª–æ–≤–∏–Ω–æ–π –î–µ—Å—è—Ç–∏–ª–µ—Ç–∏–π! ü•≥\n\n"
        "–Ø, –ú–∞–≥–∏—Å—Ç—Ä –§–ª–∞–≤–∏—É—Å –ê–±–µ—Å—Å–∏–Ω—Å–∫–∏–π, –ê—Ä—Ö–∏–º–∞–≥ –®–∫–æ–ª—ã –¢—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏ –∏ –ù–µ–±–µ—Å–Ω—ã–π –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å –°–∫–∏–¥–æ–∫, –ø—Ä–æ–∑—Ä–µ–≤–∞—é —Å–∫–≤–æ–∑—å —Ç—É–º–∞–Ω—ã –∏–∑–º–µ—Ä–µ–Ω–∏–π, —á—Ç–æ–±—ã —É–∑—Ä–µ—Ç—å —Ç–≤–æ–µ –≤–µ–ª–∏–∫–æ–µ... <b>–ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è!</b> üåü\n\n"
        "–ñ–µ–ª–∞—é <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –£—Å–ø–µ—Ö–æ–≤</b> –≤–æ –≤—Å–µ—Ö –¥–µ–ª–∞—Ö, –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –∑–∞–ø–∞—Å–∞ <b>–•–∏—Ç –ü–æ–∏–Ω—Ç–æ–≤</b> –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –∑–æ–ª–æ—Ç–∞, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ —Ö–≤–∞—Ç–∞–ª–æ –Ω–∞ –ª—É—á—à–∏–µ –∑–µ–ª—å—è –∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã. üíé –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π —Ç–≤–æ–π –¥–µ–Ω—å –¥–∞—Ä–∏—Ç <b>–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –ª—É—Ç!</b> –° 35-–º —É—Ä–æ–≤–Ω–µ–º! üéÇ\n\n"
        "–¢–≤–æ—è –¥–æ–±–ª–µ—Å—Ç–Ω–∞—è –¥—É—à–∞ –∏ –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –ø—Ä–∏—Ç—è–≥–∏–≤–∞—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –¥—Ä–∞–∫–æ–Ω–æ–≤, –Ω–æ –∏ —Å–æ–∫—Ä–æ–≤–∏—â–∞! üê≤ –Ø, –ú–∞–≥–∏—Å—Ç—Ä –§–ª–∞–≤–∏—É—Å, —Å–æ–æ–±—â–∞—é: —Ç–≤–æ–∏ –ø–æ–¥–∞—Ä–∫–∏ –Ω–µ –¥–æ—Å—Ç–∞–Ω—É—Ç—Å—è —Ç–µ–±–µ –ª–µ–≥–∫–æ. –û–Ω–∏ –∑–∞–ø–µ—á–∞—Ç–∞–Ω—ã <b>–ú–æ—â–Ω—ã–º –ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ–º –í—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –°–º–µ—â–µ–Ω–∏—è</b>, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω–∏–≤ <b>–ö–≤–µ—Å—Ç –î–Ω—è –†–æ–∂–¥–µ–Ω–∏—è!</b> üìú\n\n"
        "–°–æ–±–µ—Ä–∏ —Å–≤–æ–π –æ—Ç—Ä—è–¥, –∑–∞—Ç–æ—á–∏ <b>–ú–µ—á –û—Å—Ç—Ä—ã—Ö –®—É—Ç–æ–∫</b> –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Å—è! –ò –ø–æ–º–Ω–∏: –∫–∞–∂–¥—ã–π –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —ç—Ç–∞–ø –ö–≤–µ—Å—Ç–∞ –¥–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ <b>–û–ø—ã—Ç</b>, –Ω–æ –∏ <b>–ß–∞—Å—Ç—å –ù–∞–≥—Ä–∞–¥—ã!</b> üí∞\n"
        "–î–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –£—Å–ø–µ—Ö</b> –≤ –ø–æ–∏—Å–∫–∞—Ö!‚Äù"
    )

    await update.message.reply_animation(
        animation=open("Gif-1.gif", "rb"),
        caption=text,
        reply_markup=reply_markup,
        parse_mode=ParseMode.HTML,
    )
    return START_QUEST


async def start_quest_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 2: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç'. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ó–∞–¥–∞–Ω–∏–µ 1."""
    query = update.callback_query
    await query.answer()
    # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await query.edit_message_reply_markup(reply_markup=None)

    text = (
        "–ê–Ω–¥—Ä–µ–π, —Ç—ã –ø—Ä–∏–Ω—è–ª –≤—ã–∑–æ–≤! –ú—É–¥—Ä–æ! üß† –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞, —Ç—ã –¥–æ–ª–∂–µ–Ω –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –≥–ª–∞–∑ —Ç–≤–æ–π –æ—Å—Ç–µ—Ä, –∞ –ø–∞–º—è—Ç—å –æ <b>–¢–≤–æ–µ–º –õ–∏—á–Ω–æ–º –ü–æ–¥–∑–µ–º–µ–ª—å–µ</b> ‚Äî –±–µ–∑—É–ø—Ä–µ—á–Ω–∞. ‚ú®\n\n"
        "<b>–ó–ê–î–ê–ù–ò–ï 1: –ò–°–ü–´–¢–ê–ù–ò–ï –ù–ê–ë–õ–Æ–î–ê–¢–ï–õ–¨–ù–û–°–¢–ò</b> üßê\n"
        "–Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å–≤–æ–µ –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ <b>–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –ò–ª–ª—é–∑–∏–∏ 4-–≥–æ –ö—Ä—É–≥–∞</b> –∏ —Å–ª–µ–≥–∫–∞ –∏–∑–º–µ–Ω–∏–ª –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω —É–≥–æ–ª —Ç–≤–æ–µ–≥–æ –º–∏—Ä–Ω–æ–≥–æ —É–±–µ–∂–∏—â–∞. –≠—Ç–æ —É–≥–æ–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤–∏–¥–∏—à—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ, –ø–æ—á—Ç–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏—è. üëÅÔ∏è\n\n"
        "–¢–≤–æ—è –∑–∞–¥–∞—á–∞, –ì–µ—Ä–æ–π: –í–∑–≥–ª—è–Ω–∏ –Ω–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–π –æ–±—Ä–∞–∑. <b>–ß—Ç–æ –Ω–µ —Ç–∞–∫?</b>\n"
        "<b>–ö–∞–∫–æ–π –í–∞–∂–Ω—ã–π –ê—Ä—Ç–µ—Ñ–∞–∫—Ç</b>, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —ç—Ç–æ–º –º–µ—Å—Ç–µ, –±—ã–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –∏–∑–≥–Ω–∞–Ω –∏–∑ —ç—Ç–æ–≥–æ –ò–∑–º–µ—Ä–µ–Ω–∏—è –º–æ–µ–π –º–∞–≥–∏–µ–π? üîÆ\n\n"
        "–£–¥–∞—á–∏, –ò—Å–∫–∞—Ç–µ–ª—å –°–æ–∫—Ä–æ–≤–∏—â! –î–∞ –±—É–¥–µ—Ç —Ç–≤–æ—è –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∞–∫ –∂–µ –æ—Å—Ç—Ä–∞, –∫–∞–∫ –∫–æ–≥—Ç–∏! ü¶Ö"
    )

    await context.bot.send_photo(
        chat_id=query.message.chat_id,
        photo=open("Photo-1.jpg", "rb"),
        caption=text,
        has_spoiler=True,
        parse_mode=ParseMode.HTML,
    )
    return AWAIT_TASK_1


async def task_1_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ó–∞–¥–∞–Ω–∏–µ 1. –ñ–¥–µ—Ç '–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ —á—Ç–∏–≤–æ'."""
    answer = update.message.text
    if answer.strip().lower() == "–∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ —á—Ç–∏–≤–æ":
        text = (
            "<b>–ë–†–ê–í–û, –ê–ù–î–†–ï–ô!</b> –¢–≤–æ–π <b>–ë—Ä–æ—Å–æ–∫ –Ω–∞ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç</b> —É—Å–ø–µ—à–µ–Ω, <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –£—Å–ø–µ—Ö!</b> üéØ –¢—ã –ø—Ä–æ—Ä–≤–∞–ª—Å—è —Å–∫–≤–æ–∑—å –º–æ–∏ —á–∞—Ä—ã! –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! ‚úÖ\n\n"
            "–ù–æ –Ω–µ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Å—è! –¢–≤–æ–µ —Å–ª–µ–¥—É—é—â–µ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç <b>–ö–æ—à–∞—á—å–µ–π –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã!</b> üê±\n\n"
            "<b>–ó–ê–î–ê–ù–ò–ï 2: –¢–û–ß–ö–ê –ó–†–ï–ù–ò–Ø –ê–†–¢–ï–§–ê–ö–¢–ê</b> üëÅÔ∏è\n"
            "–Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª <b>–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –°–º–µ—â–µ–Ω–∏—è –î—É—à–∏</b> –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–º–µ—Å—Ç–∏–ª –æ–¥–∏–Ω –∏–∑ —Ç–≤–æ–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –≤... –Ω–µ–æ–±—ã—á–Ω–æ–µ –º–µ—Å—Ç–æ. üéÅ\n\n"
            "–¢–µ–±–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ù–æ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∏—Å—É–Ω–æ–∫! –≠—Ç–æ —Ä–∞–∫—É—Ä—Å, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫. <b>–¢—ã —Å–º–æ—Ç—Ä–∏—à—å –Ω–∞ –º–∏—Ä –µ–≥–æ –≥–ª–∞–∑–∞–º–∏!</b>\n\n"
            "–¢–≤–æ—è –∑–∞–¥–∞—á–∞: <b>–ù–∞–π—Ç–∏ –º–µ—Å—Ç–æ –≤ —Ç–≤–æ–µ–º –õ–æ–≥–æ–≤–µ</b>, –≥–¥–µ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Ç–∞–π–Ω—ã–π –ê—Ä—Ç–µ—Ñ–∞–∫—Ç! üó∫Ô∏è\n\n"
            "–û—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Å—è –ø–æ –ø–æ—Ç–æ–ª–∫—É, –ø–æ–ª—É, –º–µ–±–µ–ª–∏! –î—É–º–∞–π, –∫–∞–∫ <b>–°–ø—è—â–∏–π –ö–æ—Ç</b>, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–±–ª—é–¥–∞–µ—Ç –∑–∞ –º–∏—Ä–æ–º –∏–∑ —Å–≤–æ–µ–≥–æ —É–∫—Ä–æ–º–Ω–æ–≥–æ –º–µ—Å—Ç–∞! üí§\n\n"
            "–î–∞ –±—É–¥–µ—Ç —Ç–≤–æ–µ –∑—Ä–µ–Ω–∏–µ –æ—Å—Ç—Ä—ã–º, –∞ –∏–Ω—Ç—É–∏—Ü–∏—è ‚Äì –º—É—Ä—á–∞—â–µ–π! –í–ø–µ—Ä–µ–¥!"
        )

        await update.message.reply_photo(
            photo=open("Photo-2.jpg", "rb"),
            caption=text,
            has_spoiler=True,
            parse_mode=ParseMode.HTML,
        )
        return AWAIT_TASK_2
    else:
        await wrong_answer(update, context)
        return AWAIT_TASK_1


async def task_2_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ó–∞–¥–∞–Ω–∏–µ 2. –ñ–¥–µ—Ç '–ú–∞—Ä—Å–µ–ª—å'."""
    answer = update.message.text
    if answer.strip().lower() == "–º–∞—Ä—Å–µ–ª—å":
        text = (
            "<b>–ë–õ–ï–°–¢–Ø–©–ï, –ê–ù–î–†–ï–ô!</b> –¢—ã –æ–±–ª–∞–¥–∞–µ—à—å <b>–ü–æ–≤—ã—à–µ–Ω–Ω—ã–º –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º</b> –∑–∞–º–ª—É–∂–µ–Ω–Ω–æ! üí° –¢—ã –≤–µ—Ä–Ω–æ –æ—Ç–≥–∞–¥–∞–ª —à–∞—Ä–∞–¥—É! –ó–∞–¥–∞–Ω–∏–µ 2 –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! ‚úÖ\n\n"
            "–ù–æ —Å–ª–µ–¥—É—é—â–∞—è –Ω–∞–≥—Ä–∞–¥–∞ —Ç—Ä–µ–±—É–µ—Ç –µ—â—ë –±–æ–ª—å—à–µ–≥–æ —É—Å–∏–ª–∏—è! üí™\n\n"
            "<b>–ó–ê–î–ê–ù–ò–ï 3: –¢–ê–ö–¢–ò–õ–¨–ù–û–ï –ò–°–ü–´–¢–ê–ù–ò–ï</b> üñêÔ∏è\n"
            "–Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å–≤–æ–µ <b>–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –¢—Ä–∞–Ω—Å–º—É—Ç–∞—Ü–∏–∏ –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏</b> –∏ —Å–ª–∏–ª —Ç–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ø—Ä—è—Ç–∞–Ω–Ω—ã–π –¥–∞—Ä —Å –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–æ–π! üåø\n\n"
            "–¢–µ–±–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è <b>–∫—Ä—É–ø–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Ç–µ–∫—Å—Ç—É—Ä—ã</b> –≤ —Ç–≤–æ–µ–º –õ–æ–≥–æ–≤–µ. üñºÔ∏è\n\n"
            "–¢–≤–æ—è –∑–∞–¥–∞—á–∞: <b>–ù–∞–π—Ç–∏ —ç—Ç–æ—Ç —É–∑–æ—Ä –≤ —Ç–≤–æ–µ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ!</b> –ü–æ—Å–ª–µ–¥–Ω–∏–π –ü–æ–¥–∞—Ä–æ–∫ —Å–ø—Ä—è—Ç–∞–Ω –∏–º–µ–Ω–Ω–æ <b>–í –≠–¢–û–ú –ú–ï–°–¢–ï</b>, —Å–ª–∏–≤—à–∏—Å—å —Å –Ω–∏–º! ü§´\n\n"
            "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π —Å–≤–æ—é <b>–ú–∞–≥–∏—é –û—Å—è–∑–∞–Ω–∏—è!</b> –î—É–º–∞–π, –∫–∞–∫ <b>–ö–æ—Ç</b>, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±–∏—Ä–∞–µ—Ç —Å–∞–º–æ–µ –º—è–≥–∫–æ–µ –∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Å–Ω–∞! üò¥\n\n"
            "–î–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –£—Å–ø–µ—Ö</b> –≤ –æ—Å—è–∑–∞–Ω–∏–∏!"
        )

        await update.message.reply_photo(
            photo=open("Photo-3.jpg", "rb"),
            caption=text,
            has_spoiler=True,
            parse_mode=ParseMode.HTML,
        )
        return AWAIT_TASK_3
    else:
        await wrong_answer(update, context)
        return AWAIT_TASK_2


async def task_3_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ó–∞–¥–∞–Ω–∏–µ 3. –ñ–¥–µ—Ç '7'."""
    answer = update.message.text
    if answer.strip() == "7":
        text = (
            "<b>–í–û–°–•–ò–¢–ò–¢–ï–õ–¨–ù–û, –ê–ù–î–†–ï–ô!</b> –¢–≤–æ—è <b>–ú—è–≥–∫–∞—è –∫–∞–∫ –∫–æ—à–∞—á—å—è –ª–∞–ø–∫–∞ –õ–æ–≥–∏–∫–∞</b>\n"
            "–Ω–∞ —É—Ä–æ–≤–Ω–µ –≠–ª—å—Ñ–∞-–Ø—Å–Ω–æ–≤–∏–¥—Ü–∞! üß† –¢—ã –ø–æ–±–µ–¥–∏–ª! –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! ‚úÖ\n\n"
            "–ù–æ —Ç–µ–ø–µ—Ä—å —Ç—ã —Å—Ç–æ–∏—à—å –ø–µ—Ä–µ–¥ <b>–°—É–Ω–¥—É–∫–æ–º –°–æ–∫—Ä–æ–≤–∏—â!</b> üì¶ –û–Ω –∑–∞–ø–µ—Ä—Ç –¥—Ä–µ–≤–Ω–∏–º <b>–ó–∞–º–∫–æ–º –ß–∏—Å–µ–ª</b>, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫—Ä–æ–µ—Ç —Ç–æ–ª—å–∫–æ –≤–µ—Ä–Ω—ã–π –∫–æ–¥! üîê\n\n"
            "<b>–§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–´–¢–ê–ù–ò–ï: –õ–ê–ë–ò–†–ò–ù–¢ –•–†–ê–ù–ò–¢–ï–õ–Ø –ö–û–î–ê</b> üó∫Ô∏è\n"
            "–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π –ª–µ–∂–∏—Ç –õ–∞–±–∏—Ä–∏–Ω—Ç, –Ω–∞—á–µ—Ä—Ç–∞–Ω–Ω—ã–π –Ω–∞ –ª–∏—Å—Ç–µ (–∏–ª–∏ —ç–∫—Ä–∞–Ω–µ). –≠—Ç–æ <b>–ü—Ä–æ–∫–ª—è—Ç—ã–π –õ–∞–±–∏—Ä–∏–Ω—Ç –§–ª–∞–≤–∏—É—Å–∞</b>, –≥–¥–µ –≤—Å–µ –ø—É—Ç–∏ –≤–µ–¥—É—Ç –∫ –∏—Å—Ç–∏–Ω–µ.\n\n"
            "–¢–≤–æ—è –∑–∞–¥–∞—á–∞: <b>–ü—Ä–æ–π—Ç–∏ –ª–∞–±–∏—Ä–∏–Ω—Ç –æ—Ç —Å—Ç–∞—Ä—Ç–∞ –¥–æ —Ñ–∏–Ω–∏—à–∞ 3 —Ä–∞–∑–∞.</b>\n"
            "<b>–°–æ–±–µ—Ä–∏ —Ü–∏—Ñ—Ä—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</b>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å <b>–ö–æ–¥ –∏–∑ 3 –ó–Ω–∞–∫–æ–≤!</b> üî¢\n\n"
            "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π —Å–≤–æ—é <b>–õ–æ–≤–∫–æ—Å—Ç—å –∏ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç!</b> –¢–æ–ª—å–∫–æ –≤–µ—Ä–Ω—ã–π –∫–æ–¥ –æ—Ç–æ–ø—Ä–µ—Ç –°—É–Ω–¥—É–∫, –≥–¥–µ —Ç–µ–±—è –∂–¥–µ—Ç <b>–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –õ—É—Ç –ì–µ—Ä–æ—è 35-–≥–æ –£—Ä–æ–≤–Ω—è!</b> üèÜ\n\n"
            "–î–∞ –±—É–¥–µ—Ç —Ç–≤–æ—è —Ä—É–∫–∞ —Ç–≤–µ—Ä–¥–∞, –∞ –≤–∑–≥–ª—è–¥ ‚Äî —á–∏—Å—Ç! ‚ú®"
        )

        await update.message.reply_photo(
            photo=open("Photo-4.jpg", "rb"),
            caption=text,
            has_spoiler=True,
            parse_mode=ParseMode.HTML,
        )
        return AWAIT_TASK_4
    else:
        await wrong_answer(update, context)
        return AWAIT_TASK_3


async def task_4_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 6: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ó–∞–¥–∞–Ω–∏–µ 4. –ñ–¥–µ—Ç '99'."""
    answer = update.message.text
    if answer.strip() == "99":
        text = (
            "<b>–í–û–°–•–ò–¢–ò–¢–ï–õ–¨–ù–û, –ê–ù–î–†–ï–ô!</b> –¢–≤–æ—è <b>–õ–æ–≤–∫–æ—Å—Ç—å –∏\n"
            "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç</b> –ø—Ä–µ–æ–¥–æ–ª–µ–ª–∏ –∏ —ç—Ç–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ! üöÄ –°—á–µ—Ç—á–∏–∫ –ö–≤–µ—Å—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: <b>–ü–û–ë–ï–î–ê!</b> üèÅ\n\n"
            "–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —ç–Ω–µ—Ä–≥–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ <b>–ì–õ–ê–í–ù–û–ì–û –°—É–Ω–¥—É–∫–∞</b>\n"
            "–ø—É–ª—å—Å–∏—Ä—É–µ—Ç... üí• –ù–æ <b>–§–∏–Ω–∞–ª—å–Ω—ã–π –õ—É—Ç</b> –Ω–µ —Ç–∞–∫ –ø—Ä–æ—Å—Ç!\n\n"
            "<b>–§–ò–ù–ê–õ–¨–ù–´–ô –ê–ö–¢: –ö–û–û–†–î–ò–ù–ê–¢–´ –ì–õ–ê–í–ù–û–ì–û –ê–†–¢–ï–§–ê–ö–¢–ê</b> üìç\n"
            "–¢–≤–æ—è —Ü–µ–ª—å ‚Äî <b>–ì–ª–∞–≤–Ω—ã–π –ê—Ä—Ç–µ—Ñ–∞–∫—Ç</b> ‚Äî –Ω–∞—Ö–æ–¥–∏—Ç—Å—è <b>–†–Ø–î–û–ú!</b> –¢–∞–∫ –±–ª–∏–∑–∫–æ, –∫–∞–∫ –Ω–∏–∫–æ–≥–¥–∞! ü§©\n\n"
            "–Ø –ø—Ä–∏—Å—ã–ª–∞—é —Ç–µ–±–µ <b>–¢—Ä–∏–æ –ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫–æ–≤!</b> –¢—ã –∑–Ω–∞–µ—à—å <b>–¢–æ—á–∫–∏ –†–µ—Å–ø–∞—É–Ω–∞</b> —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤? ü§î\n\n"
            "–¢–≤–æ—è –∑–∞–¥–∞—á–∞, –ì–µ—Ä–æ–π: <b>–û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –≤ –ó–æ–Ω—É –ù–∞–∏–±–æ–ª—å—à–µ–≥–æ –°–±–ª–∏–∂–µ–Ω–∏—è!</b> –ù–∞–π–¥–∏ —Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ <b>–í–°–ï –¢–†–ò –ü–†–ï–î–ú–ï–¢–ê</b> —Å—Ö–æ–¥—è—Ç—Å—è –Ω–∞ <b>–ö–∞—Ä—Ç–µ –¢–≤–æ–µ–≥–æ –î–æ–º–∞!</b> üó∫Ô∏è\n\n"
            "–ò–º–µ–Ω–Ω–æ —Ç–∞–º, –≤ <b>–¶–µ–Ω—Ç—Ä–µ –ü—Ä–∏—Ç—è–∂–µ–Ω–∏—è</b> —ç—Ç–∏—Ö –ê—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤, –ª–µ–∂–∏—Ç –¢–í–û–ô <b>–§–ò–ù–ê–õ–¨–ù–´–ô, –°–ò–Ø–Æ–©–ò–ô, –õ–ï–ì–ï–ù–î–ê–†–ù–´–ô –ü–û–î–ê–†–û–ö!</b> üéÅ‚ú®\n\n"
            "–î–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π <b>–ò–Ω—Å—Ç–∏–Ω–∫—Ç</b> –∏ <b>–ë–æ–Ω—É—Å –∫ –°–∫–æ—Ä–æ—Å—Ç–∏ –î–≤–∏–∂–µ–Ω–∏—è!</b>\n"
            "<b>–ú–ò–°–°–ò–Ø</b> –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –∑–∞–±–µ—Ä–µ—à—å —Å–≤–æ—é <b>–ù–∞–≥—Ä–∞–¥—É 35-–≥–æ –£—Ä–æ–≤–Ω—è!</b> üèÜ"
        )

        await update.message.reply_photo(
            photo=open("Photo-5.jpg", "rb"),
            caption=text,
            has_spoiler=True,
            parse_mode=ParseMode.HTML,
        )
        return AWAIT_TASK_5
    else:
        await wrong_answer(update, context)
        return AWAIT_TASK_4


async def task_5_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 7: –õ—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ó–∞–¥–∞–Ω–∏—è 5. –°–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –∑–∞–∫–æ–Ω—á–∏–ª –ª–∏."""
    keyboard = [
        [InlineKeyboardButton("–î–∞, —è –≤—ã–ø–æ–ª–Ω–∏–ª –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è", callback_data="finish_quest")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    text = (
        "–≠–ô! –¢–´! <b>–ì–ï–†–û–ô 35-–ì–û –£–†–û–í–ù–Ø!</b> üì£\n"
        "–ß—Ç–æ —Ç—ã —Ç—É—Ç –∏—â–µ—à—å, –ê–Ω–¥—Ä–µ–π? –¢–≤–æ–π <b>–ñ—É—Ä–Ω–∞–ª –ö–≤–µ—Å—Ç–æ–≤</b> –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É—Å—Ç, –∞ <b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å</b> ‚Äî –ø–æ–ª–æ–Ω! üìú –¢—ã –∑–∞–≤–µ—Ä—à–∏–ª –≤—Å–µ –ò—Å–ø—ã—Ç–∞–Ω–∏—è? –ù–∞—à–µ–ª <b>–§–∏–Ω–∞–ª—å–Ω—ã–π –ê—Ä—Ç–µ—Ñ–∞–∫—Ç?</b> üéÅ\n"
        "–í—Ä–µ–º—è –Ω–µ –∂–¥–µ—Ç! –û—Ç–≤–µ—á–∞–π, –≤–æ–∏–Ω! ‚è≥"
    )

    await update.message.reply_text(
        text=text,
        reply_markup=reply_markup,
        parse_mode=ParseMode.HTML,
    )
    return AWAIT_FINAL_CONFIRM


async def finish_quest_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 8: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–î–∞, —è –≤—ã–ø–æ–ª–Ω–∏–ª...'. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Gif-2 –∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ."""
    query = update.callback_query
    await query.answer()
    await query.edit_message_reply_markup(reply_markup=None)  # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É

    text = (
        "<b>–°–õ–£–®–ê–ô–¢–ï –ò –í–ù–ò–ú–ê–ô–¢–ï, –ñ–ò–¢–ï–õ–ò –í–°–ï–• –ò–ó–ú–ï–†–ï–ù–ò–ô!</b> üì¢\n"
        "<b>–ê–ù–î–†–ï–ô, –¢–ò–¢–ê–ù 35-–ì–û –£–†–û–í–ù–Ø, –û–§–ò–¶–ò–ê–õ–¨–ù–û –ó–ê–í–ï–†–®–ò–õ –≠–ü–ò–ß–ï–°–ö–£–Æ –ö–ê–ú–ü–ê–ù–ò–Æ –î–ù–Ø –†–û–ñ–î–ï–ù–ò–Ø!</b> üèÜ\n\n"
        "–ï–≥–æ <b>–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç</b> –ø—Ä–µ–æ–¥–æ–ª–µ–ª –∏–ª–ª—é–∑–∏–∏, <b>–õ–æ–≤–∫–æ—Å—Ç—å</b> –æ–±–æ—à–ª–∞ –ª–æ–≤—É—à–∫–∏, –∞ <b>–ú—É–¥—Ä–æ—Å—Ç—å</b> –ø—Ä–∏–≤–µ–ª–∞ –∫ <b>–§–∏–Ω–∞–ª—å–Ω–æ–º—É –õ—É—Ç—É!</b> ‚ú® –¢—ã –¥–æ–∫–∞–∑–∞–ª, —á—Ç–æ —è–≤–ª—è–µ—à—å—Å—è <b>–ò—Å—Ç–∏–Ω–Ω—ã–º\n"
        "–í–ª–∞—Å—Ç–µ–ª–∏–Ω–æ–º —Å–≤–æ–µ–≥–æ –õ–æ–≥–æ–≤–∞!</b> üëë –¢–≤–æ–π <b>–°—á–µ—Ç –û–ø—ã—Ç–∞</b> —Å–µ–≥–æ–¥–Ω—è –¥–æ—Å—Ç–∏–≥ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã—Ö –≤—ã—Å–æ—Ç! üìà\n\n"
        "–ü—É—Å—Ç—å —Ç–≤–æ–π <b>–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –•–∞—Ä–∏–∑–º—ã</b> –æ—á–∞—Ä–æ–≤—ã–≤–∞–µ—Ç –≤—Å–µ—Ö —Å–æ—é–∑–Ω–∏–∫–æ–≤, ü•∞ —Ç–≤–æ–π <b>–≠–ª–µ–∫—Å–∏—Ä –æ—Ç –£—Å—Ç–∞–ª–æ—Å—Ç–∏</b> –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –∞ —Ç–≤–æ—è <b>–ö–∞–∑–∫–∞, –ú–∏–ª–æ—Ä–¥</b>, –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–ø—É—Å—Ç–µ–µ—Ç! üí∞\n\n"
        "<b>–ú–´ –°–ê–õ–Æ–¢–£–ï–ú –¢–ï–ë–ï, –ê–ù–î–†–ï–ô!</b> –û—Ç–ø—Ä–∞–∑–¥–Ω—É–π —Å–≤–æ—é –ü–æ–±–µ–¥—É —Å —á–µ—Å—Ç—å—é –∏ –∏–∑–æ–±–∏–ª–∏–µ–º! ü•≥\n"
        "<b>–° –î–ùEM –†–û–ñ–î–ï–ù–ò–Ø!</b> üéÇ"
    )

    await context.bot.send_animation(
        chat_id=query.message.chat_id,
        animation=open("Gif-2.gif", "rb"),
        caption=text,
        parse_mode=ParseMode.HTML,
    )
    return QUEST_FINISHED


async def after_finish_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–®–∞–≥ 9: –õ—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞."""
    text = (
        "–¢—ã –∏—â–µ—à—å –º–µ–Ω—è? –£–≤—ã, —è –Ω–µ –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ç–≤–æ–µ–º –ò–∑–º–µ—Ä–µ–Ω–∏–∏! üí®\n"
        "–ö–∞–∫ —Ç–æ–ª—å–∫–æ <b>–§–∏–Ω–∞–ª—å–Ω—ã–π –õ—É—Ç</b> –±—ã–ª –¥–æ–±—ã—Ç, –º–æ–π <b>–°–æ—Å—É–¥ –ú–∞–Ω—ã</b> –æ–ø—É—Å—Ç–µ–ª. üìâ –Ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª <b>–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –û—Ç—Å—Ç—É–ø–ª–µ–Ω–∏—è</b> (Emergency Retreat) –∏ —Å–µ–π—á–∞—Å –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é <b>–û—á–∫–∏ –ú–∞–Ω—ã</b> –≤ <b>–ê—Å—Ç—Ä–∞–ª—å–Ω–æ–º –¢—Ä–∞–∫—Ç–∏—Ä–µ \"–°–ø—è—â–∏–π –ö–æ—Ç\"!</b> üò¥\n\n"
        "–ú–æ–π <b>–î–æ–≥–æ–≤–æ—Ä –ò—Å–ø–æ–ª–Ω–µ–Ω!</b> üìú –¢–≤–æ–π <b>–ö–≤–µ—Å—Ç –ó–∞–≤–µ—Ä—à–µ–Ω!</b> –¢—ã —Å–≤–æ–±–æ–¥–µ–Ω! –Ø –≤–µ—Ä–Ω—É—Å—å, –∫–æ–≥–¥–∞ —Å–æ–±–µ—Ä—É –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ <b>–†–µ–∞–≥–µ–Ω—Ç–æ–≤</b> –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ <b>–≠–ø–∏—á–µ—Å–∫–æ–≥–æ –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è!</b> üßô‚Äç‚ôÇÔ∏è\n\n"
        "–ü—Ä–æ–¥–æ–ª–∂–∞–π —Å–≤–æ–µ –≥–µ—Ä–æ–∏—á–µ—Å–∫–æ–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ! üõ°Ô∏è"
    )
    await update.message.reply_text(text, parse_mode=ParseMode.HTML)
    return QUEST_FINISHED


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –∫–≤–µ—Å—Ç."""
    await update.message.reply_text(
        "–ö–≤–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω! –ú–∞–≥–∏—Å—Ç—Ä –§–ª–∞–≤–∏—É—Å –æ—Ç—Å—Ç—É–ø–∞–µ—Ç –≤ —Å–≤–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ... üßô‚Äç‚ôÇÔ∏è"
    )
    return ConversationHandler.END


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    application = Application.builder().token(TOKEN).build()

    # –°–æ–∑–¥–∞–µ–º ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            START_QUEST: [
                CallbackQueryHandler(start_quest_callback, pattern="^start_quest$")
            ],
            AWAIT_TASK_1: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, task_1_handler)
            ],
            AWAIT_TASK_2: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, task_2_handler)
            ],
            AWAIT_TASK_3: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, task_3_handler)
            ],
            AWAIT_TASK_4: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, task_4_handler)
            ],
            AWAIT_TASK_5: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, task_5_handler)
            ],
            AWAIT_FINAL_CONFIRM: [
                CallbackQueryHandler(finish_quest_callback, pattern="^finish_quest$")
            ],
            QUEST_FINISHED: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, after_finish_handler)
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()


if __name__ == "__main__":

    main()

